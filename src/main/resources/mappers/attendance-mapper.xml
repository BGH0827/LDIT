<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="aboutAtt">

<resultMap type="Attendance" id="TodayAttendance">
	<result property="attNo" column="ATT_NO"/>
	<result property="stfNo" column="STF_NO"/>
	<result property="attStart" column="ATT_START"/>
	<result property="attEnd" column="ATT_END"/>
	<result property="attRestAll" column="ATT_RESTALL"/>
</resultMap>

<resultMap type="WorkBreak" id="WorkBreak1">
	<id property="brNo" column="BR_NO" />
	<result property="brStart" column="BR_START"/>
	<result property="brEnd" column="BR_END"/>
</resultMap>

<resultMap type="WorkBreak" id="WorkBreak2">
	<id property="brNo" column="BR_NO" />
	<result property="brStart" column="BR_START"/>
	<result property="brEnd" column="BR_END"/>
	<result property="attNo" column="ATT_NO"/>
	<result property="stfNo" column="STF_NO"/>
</resultMap>

<resultMap type="WHM" id="WHMCode">
	<id property="whmCode" column="WHM_CODE" />
	<result property="whmRestCode" column="WHM_REST_CODE" />
</resultMap>

<resultMap type="WHMZero" id="WHMZero">
	<id property="whmZeroDay" column="WHM_ZERO_DAY" />
	<result property="whmZeroStart" column="WHM_ZERO_START" />
	<result property="whmZeroEnd" column="WHM_ZERO_END" />
	<result property="whmZeroYesNo" column="WHM_ZERO_YESNO" />
</resultMap>

<resultMap type="Xiuxi" id="xiuxiL">
	<id property="xiuNo" column="XIU_NO"/>
	<result property="xiuReason" column="XIU_REASON"/>
	<result property="xiuState" column="XIU_STATE"/>
	<result property="xiuAplYesNo" column="XIU_APL_YESNO"/>
</resultMap>

<select id="getTodayAttendance" parameterType="_int" resultMap="TodayAttendance">
	<![CDATA[ 
	select ATT_NO, STF_NO, to_char(ATT_START, 'hh24:mi:ss') ATT_START, to_char(ATT_END, 'hh24:mi:ss') ATT_END
	, (
		select replace((to_char(sum(beh), '09')||':'||to_char(sum(bem),'09')||':'||to_char(sum(bes), '09')),' ', '')
        	from (select extract(HOUR FROM diff) AS beh
       		,extract(MINUTE FROM diff) AS bem
        	,extract(SECOND FROM diff) AS bes
            	from (SELECT (be-bs) as diff 
            		from (select to_timestamp(to_char(BR_START, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') bs
                		, to_timestamp(to_char(BR_END, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') be 
                    		from WORK_BREAK
                    		where STF_NO =#{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD')))))
	) as ATT_RESTALL
		from ATTENDANCE where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD'))
  	]]>		
</select>

<select id="getAttStartDateTime" parameterType="map" resultType="string">
	select to_char(ATT_START, 'YYYYMMDDhh24miss') ATT_START from ATTENDANCE where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo}
</select>

<select id="getElapsedWTime" parameterType="map" resultType="map">
	<![CDATA[ 
  		select to_char(extract(HOUR FROM diff), '09') as eh
        ,to_char(extract(MINUTE FROM diff), '09') as em
        ,to_char(extract(SECOND FROM diff), '09') as es
    	    from(select (atte-atts) as diff from (select rownum,
       		to_timestamp(to_char(ATT_START, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') atts,
        	to_timestamp(to_char(ATT_END, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') atte 
        		from ATTENDANCE
        		where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo}))
  	]]>
</select>

<select id="getElapsedRTime" parameterType="map" resultType="map">
	<![CDATA[ 
        select to_char(sum(beh), '09') eh,  to_char(sum(bem), '09') em,  to_char(sum(bes), '09') es
        	from (select extract(HOUR FROM diff) AS beh
       		,extract(MINUTE FROM diff) AS bem
        	,extract(SECOND FROM diff) AS bes
            	from (SELECT (be-bs) as diff 
            		from (select to_timestamp(to_char(BR_START, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') bs
                		, to_timestamp(to_char(BR_END, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') be 
                    		from WORK_BREAK
                    		where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo})))
  	]]>
</select>

<select id="getLatestWB" parameterType="map" resultMap="WorkBreak1">
	<![CDATA[ 
	select BR_NO, to_char(BR_START, 'hh24:mi:ss') BR_START, to_char(BR_END, 'hh24:mi:ss') BR_END 
		from (select * from WORK_BREAK where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo} order by BR_NO desc)
		where rownum = 1
  	]]>
</select>

<select id="countAplTotal" parameterType="_int" resultType="_int">
	<![CDATA[ 
	select count(*) from (select * from APL where STF_NO = #{stfNo}) where SYSDATE between APL_DATE and ADD_MONTHS(APL_DATE, '12')
	]]>
</select>

<select id="countAplUse" parameterType="_int" resultType="_int">
	<![CDATA[ 
	select count(*) from (select * from APL where STF_NO = #{stfNo} and APL_STATE = '0') where SYSDATE between APL_DATE and ADD_MONTHS(APL_DATE, '12')
	]]>
</select>

<select id="countAttStart" parameterType="_int" resultType="_int">
	<![CDATA[ 
	select count(ATT_START) from ATTENDANCE where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD'))
		]]>
</select>

<insert id="insertCheckin" parameterType="_int">
	<![CDATA[ 
	Insert into ATTENDANCE (ATT_NO, STF_NO, ATT_START) values (
	    to_number(to_char(SYSDATE, 'YYYYMMDD'))
	    , #{stfNo}
	    , SYSDATE
	)
	]]>
</insert>

<select id="getAttStart" parameterType="_int" resultType="string">
	<![CDATA[ 
	select to_char(ATT_START, 'hh24:mi:ss') ATT_START from ATTENDANCE where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD'))
			]]>
</select>

<update id="updateCheckout" parameterType="_int">
	<![CDATA[
Update ATTENDANCE set ATT_END = SYSDATE where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD'))
	]]>
</update>

<select id="getAttEnd" parameterType="_int" resultType="string">
	<![CDATA[ 
	select to_char(ATT_END, 'hh24:mi:ss') ATT_END from ATTENDANCE where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD'))
		]]>
</select>

<insert id="insertRestin" parameterType="_int">
	<![CDATA[ 
	Insert into WORK_BREAK (BR_NO, BR_START, ATT_NO, STF_NO)values (
	WORK_BREAK_SEQ.nextval
	, SYSDATE
	, to_number(to_char(SYSDATE, 'YYYYMMDD'))
	, #{stfNo}
	)
			]]>
</insert>

<select id="getRestStart" parameterType="_int" resultMap="WorkBreak1">
	<![CDATA[ 
	Select
	BR_NO
	, to_char(BR_START, 'hh24:mi:ss') BR_START
	from (select * from WORK_BREAK where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD')) order by BR_NO desc)
	where rownum = 1
	]]>
</select>

<update id="updateBrEnd" parameterType="_int">
	<![CDATA[
	Update WORK_BREAK set BR_END = SYSDATE where BR_NO = #{brNo} and BR_END is null
		]]>
</update>
<update id="updateBrEndForce" parameterType="map">
	<![CDATA[
	Update WORK_BREAK set BR_END = SYSDATE where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo} and BR_END is null
	]]>
</update>
<select id="getBrEnd" parameterType="_int" resultType="string">
	<![CDATA[ 
	select to_char(BR_END, 'hh24:mi:ss') BR_END from WORK_BREAK where BR_NO = #{brNo}
	]]>
</select>

<select id="getWorkBreak" parameterType="_int" resultMap="WorkBreak2">
	<![CDATA[ 
	select to_char(BR_START, 'hh24:mi:ss') BR_START, to_char(BR_END, 'hh24:mi:ss') BR_END, att_no from WORK_BREAK where BR_NO = #{brNo}
	]]>
</select>

<select id="getLatestBrStart" parameterType="_int" resultType="string">
	<![CDATA[ 
	select to_char(BR_START, 'hh24:mi:ss') BR_START
	from (select * from WORK_BREAK where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD')) order by BR_NO desc)
	where rownum = 1
		]]>
</select>

<select id="getLatestBrEnd" parameterType="_int" resultType="string">
	<![CDATA[ 
	select to_char(BR_END, 'hh24:mi:ss') BR_END
	from (select * from WORK_BREAK where STF_NO = #{stfNo} and ATT_NO = to_number(to_char(SYSDATE, 'YYYYMMDD')) order by BR_NO desc)
	where rownum = 1
	]]>
</select>

<select id="getBrNo" parameterType="map" resultType="_int">
	<![CDATA[ 
	select br_no from work_break where stf_no = #{stfNo} and to_char(br_start, 'hh24:mi:ss') = #{restStartFormat}
	]]>
</select>

<select id="getWHM" resultMap="WHMCode">
	select * from WH_MANAGE
</select>

<select id="getWHMOne" resultType="_int">
	select * from WHM_ONE
</select>

<select id="getWHMZero" resultMap="WHMZero">
	select * from WHM_ZERO
</select>

<update id="updateWHM" parameterType="map">
	update WH_MANAGE set WHM_CODE = #{whmCode}, WHM_REST_CODE = #{whmRestCode}
</update>

<update id="updateWHMOne" parameterType="_int">
	update WHM_ONE set WHM_ONE_CODE = #{weekHours}
</update>

<update id="resetWHMZeroState">
	update WHM_ZERO set WHM_ZERO_YESNO = 0
</update>

<update id="updateWHMZero" parameterType="map">
	update WHM_ZERO set WHM_ZERO_START = #{zeroStartFormat}, WHM_ZERO_END = #{zeroEndFormat}, WHM_ZERO_YESNO = 1
	where WHM_ZERO_DAY = #{selectedDay}
</update>

<select id="getXiuxiList" resultMap="xiuxiL">
	select * from XIUXI order by (to_number(XIU_NO, 99))
</select>

<insert id="insertXiuxiApply" parameterType="map">
	 Insert into XIUXI_APPLY values(XIUXI_APPLY_SEQ.NEXTVAl, #{xiuNo}, #{stfNo}, to_number(to_char(SYSDATE, 'YYYYMMDD')),
	 to_date(#{xaStart}, 'YYYYMMDD')
	,to_date(#{xaEnd}, 'YYYYMMDD'))
</insert>

<insert id="insertWorkHomeApply" parameterType="map">
	Insert into WORK_HOME_APPLY values(WORK_HOME_APPLY_SEQ.NEXTVAL, #{stfNo}, to_number(to_char(SYSDATE, 'YYYYMMDD'))
	, to_date(#{whStart}, 'YYYYMMDD')
	, to_date(#{whEnd}, 'YYYYMMDD')
)
</insert>

<select id="getRestAll" parameterType="map" resultType="string">
	<![CDATA[ 
	 select replace((to_char(sum(beh), '09')||':'||to_char(sum(bem),'09')||':'||to_char(sum(bes), '09')),' ', '') ATT_RESTALL
        	from (select extract(HOUR FROM diff) AS beh
       		,extract(MINUTE FROM diff) AS bem
        	,extract(SECOND FROM diff) AS bes
            	from (SELECT (be-bs) as diff 
            		from (select to_timestamp(to_char(BR_START, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') bs
                		, to_timestamp(to_char(BR_END, 'YYYYMMDDHH24MISS'), 'YYYYMMDDHH24MISS') be 
                    		from WORK_BREAK
                    		where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo} )))
		]]>
</select>

<update id="updateRestAll" parameterType="map">
	update ATTENDANCE set ATT_RESTALL = #{restAll} where STF_NO = #{stfNo} and ATT_NO = #{thisAttNo}
</update>

</mapper>
