<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Project">
	<resultMap type="Project" id="projectRM">
		<id property="proNo" column="pro_no"/>
		<result property="proTitle" column="pro_title"/>
		<result property="proContent" column="pro_content"/>
		<result property="proStart" column="pro_start"/>
		<result property="proEnd" column="pro_end"/>
		<result property="proManager" column="pro_manager"/>
		<result property="proStatus" column="pro_status"/>
		<result property="stfNo" column="stf_no"/>
		<result property="teamManager" column="team_manager"/>
		<result property="stfName" column="stf_name"/>
	</resultMap>
	
	<!-- 프로젝트 등록 -->
	<insert id="insertPJ" parameterType="Project">
		insert into PROJECT values (project_seq.nextval, #{proTitle}, #{proContent}, #{proStart}, #{proEnd}, #{stfNo}, 'N')
	</insert>
	
	<!-- 프로젝트 조회 -->
	<select id="getNewList" parameterType="int" resultMap="projectRM">
		<!-- select * from project where pro_no = #{proNo} and pro_status = 'N' order by pro_no desc -->
		select * from(select p.pro_no, p.pro_status, p.pro_manager, p.pro_title, p.pro_start, p.pro_end, p.pro_content, t.team_manager, tm.stf_no,
      				  rank() over (partition by p.pro_no order by t.team_id desc) as ranking
      				  from project p left join team t on p.pro_no = t.pro_no 
      				  left join team_member tm on t.team_id = tm.team_id
        			  where p.pro_manager = #{stfNo} or t.team_manager = #{stfNo} or tm.stf_no = #{stfNo}) t1
      	where ranking = 1 
      	and pro_status = 'N'
      	order by t1.pro_no desc
	</select>
	<select id="getContinueList" parameterType="int" resultMap="projectRM">
		<!-- select * from project where pro_no = #{proNo} and pro_status = 'C' order by pro_no desc -->
		select * from(select p.pro_no, p.pro_status, p.pro_manager, p.pro_title, p.pro_start, p.pro_end, p.pro_content, t.team_manager, tm.stf_no,
      				  rank() over (partition by p.pro_no order by t.team_id desc) as ranking
      				  from project p left join team t on p.pro_no = t.pro_no 
      				  left join team_member tm on t.team_id = tm.team_id
        			  where p.pro_manager = #{stfNo} or t.team_manager = #{stfNo} or tm.stf_no = #{stfNo}) t1
      	where ranking = 1 
      	and pro_status = 'C'
      	order by t1.pro_no desc
	</select>
	<select id="getFinishList" parameterType="int" resultMap="projectRM">
		<!-- select * from project where pro_no = #{proNo} and pro_status = 'F' order by pro_no desc -->
		select * from(select p.pro_no, p.pro_status, p.pro_manager, p.pro_title, p.pro_start, p.pro_end, p.pro_content, t.team_manager, tm.stf_no,
      				  rank() over (partition by p.pro_no order by t.team_id desc) as ranking
      				  from project p left join team t on p.pro_no = t.pro_no 
      				  left join team_member tm on t.team_id = tm.team_id
        			  where p.pro_manager = #{stfNo} or t.team_manager = #{stfNo} or tm.stf_no = #{stfNo}) t1
      	where ranking = 1 
      	and pro_status = 'F'
      	order by t1.pro_no desc
	</select>
	<select id="getAllList" parameterType="int" resultMap="projectRM">
		select * from(select p.pro_no, p.pro_status, p.pro_manager, t.team_manager, tm.stf_no,
      				  rank() over (partition by p.pro_no order by t.team_id desc) as ranking
      				  from project p left join team t on p.pro_no = t.pro_no 
      				  left join team_member tm on t.team_id = tm.team_id
        			  where p.pro_manager = #{stfNo} or t.team_manager = #{stfNo} or tm.stf_no = #{stfNo}) t1
      	where ranking = 1 
      	order by t1.pro_no desc
	</select>
	<select id="getDetailList" parameterType="int" resultMap="projectRM">
		select p.pro_no, p.pro_title, p.pro_content, p.pro_start, p.pro_end, p.pro_manager, t.team_manager, st.stf_name
		from project p
		left join team t on p.pro_no = t.pro_no
		<!-- left join staff sp on p.pro_manager = sp.stf_no -->
		left join staff st on t.team_manager = st.stf_no
		where p.pro_no = #{proNo}
	</select>
</mapper>
